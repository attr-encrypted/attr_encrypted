# -*- encoding: utf-8 -*-
require 'pathname'
require Pathname.new(__FILE__).realpath.join('..', 'test_helper')

# Test to ensure that existing representations in database do not break on
# migrating to new versions of this gem. This ensures that future versions of
# this gem will retain backwards compatibility with data generated by earlier
# versions.
class CompatibilityTest < Test::Unit::TestCase
  class Pet < ActiveRecord::Base
    PET_NICKNAME_SALT = Digest::SHA256.hexdigest('my-really-really-secret-pet-nickname-salt')
    PET_NICKNAME_KEY = 'my-really-really-secret-pet-nickname-key'
    PET_BIRTHDATE_SALT = Digest::SHA256.hexdigest('my-really-really-secret-pet-birthdate-salt')
    PET_BIRTHDATE_KEY = 'my-really-really-secret-pet-birthdate-key'
    attr_encrypted :nickname,
      :key => proc { Encryptor.encrypt(:value => PET_NICKNAME_SALT, :key => PET_NICKNAME_KEY) },
      :marshal => true
    attr_encrypted :birthdate,
      :key => proc { Encryptor.encrypt(:value => PET_BIRTHDATE_SALT, :key => PET_BIRTHDATE_KEY) },
      :marshal => true
  end

  def setup
    ActiveRecord::Base.connection.tables.each { |table| ActiveRecord::Base.connection.drop_table(table) }
    create_table
  end

  def test_backwards_compatibility_iv_salt_1
    pet = Pet.create!(
      :name => 'Fido',
      :encrypted_nickname => 'EsQScJYkPw80vVGvKWkE37Px99HHpXPFjoEPTNa4rbs=',
      :encrypted_nickname_iv => 'fNq1OZcGvty4KfcvGTcFSw==',
      :encrypted_nickname_salt => '733b459b7d34c217',
      :encrypted_birthdate => '+VUlKQGfNWkOgCwI4hv+3qlGIwh9h6cJ/ranJlaxvU+xxQdL3H3cOzTcI2rkYkdR',
      :encrypted_birthdate_iv => 'Ka+zF/SwEYZKwVa24lvFfA==',
      :encrypted_birthdate_salt => 'd5e892d5bbd81566'
    )

    assert_equal 'Fido', pet.name
    assert_equal 'Mummy\'s little helper', pet.nickname
    assert_equal Date.new(2011, 7, 9), pet.birthdate
  end

  def test_backwards_compatibility_iv_salt_2
    pet = Pet.create!(
      :name => 'Fido',
      :encrypted_nickname => 'SGET3C86zj/ggXYVifBaup6k/avRkH/avqtpyQEJSug=',
      :encrypted_nickname_iv => 'znUkg/gyt80JGEXGxEZoTA==',
      :encrypted_nickname_salt => '7fb77eca31375f96',
      :encrypted_birthdate => '1WhuhrE6jfTN3EDcs+Gsnhv+mfHvERZZFlejGeu97HFZkxUIW5x9fywPn/MHDZs+',
      :encrypted_birthdate_iv => 'z0VUmV9eP74pYFFMPYeLTQ==',
      :encrypted_birthdate_salt => '1c9bf9fe733c26e9'
    )

    assert_equal 'Fido', pet.name
    assert_equal 'Mummy\'s little helper', pet.nickname
    assert_equal Date.new(2011, 7, 9), pet.birthdate
  end

  private

  def create_table
    silence_stream(STDOUT) do
      ActiveRecord::Schema.define(:version => 1) do
        create_table :pets do |t|
          t.string :name
          t.string :encrypted_nickname
          t.string :encrypted_birthdate
          t.string :salt
        end
      end
    end
  end
end

ActiveRecord::Base.establish_connection :adapter => 'sqlite3', :database => ':memory:'

